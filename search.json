[{"title":"利用VPS实现aria2离线下载并自动上传到OneDrive","url":"/2020/02/18/利用VPS实现aria2离线下载并自动上传到OneDrive/","content":"\n\n\n\n\n本教程基于CentOS 7 64位\n\n\n\n## 1.环境准备\n\n#### 更新软件、设置时区\n\n``` \nyum update -y\n\nyum install -y curl vim wget unzip git nano\n\nln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n```\n\n\n\n#### 安装宝塔面板\n\n``` \nyum install -y wget && wget -O install.sh http://download.bt.cn/install/install_6.0.sh && sh install.sh\n```\n\n输入 y，回车开始安装，安装完成后记住面板登录信息。\n\n\n\n#### 在宝塔面板中安装Nginx（此步可跳过）\n\n\n\n## 2.安装Aria2\n\n#### 运行一键脚本\n\n```\nwget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/aria2.sh && chmod +x aria2.sh && bash aria2.sh\n```\n\n\n\n#### 授权认证\n\n授权地址→[【国际版、个人版(家庭版)】](https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=78d4dc35-7e46-42c6-9023-2d39314433a5&response_type=code&redirect_uri=http://localhost/onedrive-login&response_mode=query&scope=offline_access%20User.Read%20Files.ReadWrite.All)、[【中国版(世纪互联)】](https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize?client_id=dfe36e60-6133-48cf-869f-4d15b8354769&response_type=code&redirect_uri=http://localhost/onedrive-login&response_mode=query&scope=offline_access%20User.Read%20Files.ReadWrite.All)。\n\n授权后会跳转到一个打不开的链接，在浏览器地址栏复制好整个链接地址，包括http://localhost。\n\n\n\n## 3.安装OneDriveUploader\n\n#### 一键安装脚本\n\n```\nwget https://raw.githubusercontent.com/MoeClub/OneList/master/OneDriveUploader/amd64/linux/OneDriveUploader -P /usr/local/bin/\n```\n\n给予权限\n\n```\nchmod +x /usr/local/bin/OneDriveUploader\n```\n\n\n\n#### 初始化配置\n\n```\n#国际版，将url换成你上面复制的授权地址，包括http://loaclhost。\nOneDriveUploader -a \"url\"\n\n#个人版(家庭版)，将url换成你上面复制的授权地址，包括http://loaclhost。\nOneDriveUploader -ms -a \"url\"\n\n#中国版(世纪互联)，将url换成你上面复制的授权地址，包括http://loaclhost。\nOneDriveUploader -cn -a \"url\"\n```\n\n返回 Init config file: /root/auth.json 信息，则初始化成功。\n\n\n\n## 4.配置Aria2自动上传\n\n\n\n打开宝塔面板，在 /root文件夹中创建一个空白文件，文件名 `rcloneupload.sh`\n\n在该文件中复制以下代码\n\n```\n#!/bin/bash\n\nGID=\"$1\";\nFileNum=\"$2\";\nFile=\"$3\";\nMaxSize=\"15728640\";\nThread=\"3\";  #默认3线程，自行修改，服务器配置不好的话，不建议太多\nBlock=\"20\";  #默认分块20m，自行修改\nRemoteDIR=\"\";  #上传到Onedrive的路径，默认为根目录，如果要上传到MOERATS目录，\"\"里面请填成MOERATS\nLocalDIR=\"/www/download/\";  #Aria2下载目录，记得最后面加上/\nUploader=\"/usr/local/bin/OneDriveUploader\";  #上传的程序完整路径，默认为本文安装的目录\nConfig=\"/root/auth.json\";  #初始化生成的配置auth.json绝对路径，参考第3步骤生成的路径\n\n\nif [[ -z $(echo \"$FileNum\" |grep -o '[0-9]*' |head -n1) ]]; then FileNum='0'; fi\nif [[ \"$FileNum\" -le '0' ]]; then exit 0; fi\nif [[ \"$#\" != '3' ]]; then exit 0; fi\n\nfunction LoadFile(){\n  if [[ ! -e \"${Uploader}\" ]]; then return; fi\n  IFS_BAK=$IFS\n  IFS=$'\\n'\n  tmpFile=\"$(echo \"${File/#$LocalDIR}\" |cut -f1 -d'/')\"\n  FileLoad=\"${LocalDIR}${tmpFile}\"\n  if [[ ! -e \"${FileLoad}\" ]]; then return; fi\n  ItemSize=$(du -s \"${FileLoad}\" |cut -f1 |grep -o '[0-9]*' |head -n1)\n  if [[ -z \"$ItemSize\" ]]; then return; fi\n  if [[ \"$ItemSize\" -ge \"$MaxSize\" ]]; then\n    echo -ne \"\\033[33m${FileLoad} \\033[0mtoo large to spik.\\n\";\n    return;\n  fi\n  ${Uploader} -c \"${Config}\" -t \"${Thread}\" -b \"${Block}\" -s \"${FileLoad}\" -r \"${RemoteDIR}\" -skip\n  if [[ $? == '0' ]]; then\n    rm -rf \"${FileLoad}\";\n  fi\n  IFS=$IFS_BAK\n}\nLoadFile;\n```\n\n在以上代码中修改OneDrive上传路径和Aria2下载目录，修改完成后保存退出。\n\n\n\n授权\n\n```\nchmod +x rcloneupload.sh\n```\n\n\n\n在/root/.aria2/ 中找到  `aria2.conf` ，在其最后添加一行\n\n```\non-download-complete=/root/rcloneupload.sh\n```\n\n\n\n安装`dos2unix`并转换格式\n\n```\nyum install dos2unix -y\ndos2unix /root/rcloneupload.sh\n```\n\n","tags":["VPS/Aria2/OneDrive"]},{"title":"Hello World","url":"/2020/02/17/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]